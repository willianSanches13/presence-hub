{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { SerieEnum, SerieEnumKeys } from '../enums/serie.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../aluno.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/datepicker\";\nimport * as i11 from \"ngx-mask\";\nimport * as i12 from \"@angular/material/select\";\nimport * as i13 from \"@angular/material/core\";\nfunction AlunoCreateComponent_mat_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const serie_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", serie_r2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r2.SerieEnum[serie_r2]);\n  }\n}\nexport let AlunoCreateComponent = /*#__PURE__*/(() => {\n  class AlunoCreateComponent {\n    constructor(fb, alunoService, router, http) {\n      this.fb = fb;\n      this.alunoService = alunoService;\n      this.router = router;\n      this.http = http;\n      this.series = SerieEnumKeys;\n      this.SerieEnum = SerieEnum;\n    }\n    ngOnInit() {\n      this.alunoForm = this.fb.group({\n        nome: this.fb.control('', Validators.required),\n        email: this.fb.control('', [Validators.required, Validators.email]),\n        dataNascimento: this.fb.control(null, Validators.required),\n        serie: this.fb.control('', Validators.required),\n        endereco: this.fb.group({\n          logradouro: this.fb.control('', Validators.required),\n          bairro: this.fb.control('', Validators.required),\n          cidade: this.fb.control('', Validators.required),\n          uf: this.fb.control('', Validators.required),\n          cep: this.fb.control('', Validators.required),\n          numero: this.fb.control(null, Validators.required),\n          complemento: this.fb.control('')\n        }),\n        instituicaoDeEnsino: this.fb.control('', Validators.required),\n        telefoneContato: this.fb.control('', Validators.required),\n        nomeResponsavel: this.fb.control('', Validators.required),\n        telefoneResponsavel: this.fb.control('', Validators.required),\n        matriculaProjeto: this.fb.control('', Validators.required),\n        dataInscricao: this.fb.control(null, Validators.required),\n        observacoes: this.fb.control('')\n      });\n    }\n    buscarEndereco() {\n      const cep = this.alunoForm.get('endereco.cep')?.value;\n      if (cep) {\n        this.http.get(`https://viacep.com.br/ws/${cep}/json/`).subscribe(data => {\n          this.alunoForm.patchValue({\n            endereco: {\n              logradouro: data.logradouro,\n              bairro: data.bairro,\n              cidade: data.localidade,\n              uf: data.uf\n            }\n          });\n        });\n      }\n    }\n    createAluno() {\n      if (this.alunoForm.valid) {\n        const aluno = this.alunoForm.getRawValue();\n        this.alunoService.create(aluno).subscribe(() => {\n          this.alunoService.showMessage('Aluno criado!');\n          this.router.navigate(['/alunos']);\n        });\n      }\n    }\n    cancel() {\n      this.router.navigate(['/alunos']);\n    }\n    static #_ = this.ɵfac = function AlunoCreateComponent_Factory(t) {\n      return new (t || AlunoCreateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AlunoService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.HttpClient));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AlunoCreateComponent,\n      selectors: [[\"app-aluno-create\"]],\n      decls: 60,\n      vars: 6,\n      consts: [[\"picker\", \"\"], [\"picker2\", \"\"], [1, \"center-title\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"form-container\"], [\"matInput\", \"\", \"placeholder\", \"Nome\", \"formControlName\", \"nome\"], [\"placeholder\", \"S\\u00E9rie\", \"formControlName\", \"serie\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"placeholder\", \"Telefone de Contato\", \"formControlName\", \"telefoneContato\", \"mask\", \"(00) 00000-0000\"], [\"matInput\", \"\", \"placeholder\", \"Email\", \"formControlName\", \"email\"], [\"matInput\", \"\", \"placeholder\", \"Data de Nascimento\", \"formControlName\", \"dataNascimento\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"matInput\", \"\", \"placeholder\", \"Institui\\u00E7\\u00E3o de Ensino\", \"formControlName\", \"instituicaoDeEnsino\"], [\"matInput\", \"\", \"placeholder\", \"Nome do Respons\\u00E1vel\", \"formControlName\", \"nomeResponsavel\"], [\"matInput\", \"\", \"placeholder\", \"Telefone do Respons\\u00E1vel\", \"formControlName\", \"telefoneResponsavel\", \"mask\", \"(00) 00000-0000\"], [\"matInput\", \"\", \"placeholder\", \"Matr\\u00EDcula no Projeto\", \"formControlName\", \"matriculaProjeto\"], [\"matInput\", \"\", \"placeholder\", \"Data de Inscri\\u00E7\\u00E3o\", \"formControlName\", \"dataInscricao\", 3, \"matDatepicker\"], [\"matInput\", \"\", \"placeholder\", \"Observa\\u00E7\\u00F5es\", \"formControlName\", \"observacoes\"], [\"formGroupName\", \"endereco\", 1, \"endereco-container\"], [\"matInput\", \"\", \"placeholder\", \"CEP\", \"formControlName\", \"cep\", \"mask\", \"00000-000\", 3, \"blur\"], [\"matInput\", \"\", \"placeholder\", \"Logradouro\", \"formControlName\", \"logradouro\"], [\"matInput\", \"\", \"placeholder\", \"Bairro\", \"formControlName\", \"bairro\"], [\"matInput\", \"\", \"placeholder\", \"Cidade\", \"formControlName\", \"cidade\"], [\"matInput\", \"\", \"placeholder\", \"UF\", \"formControlName\", \"uf\"], [\"matInput\", \"\", \"placeholder\", \"N\\u00FAmero\", \"formControlName\", \"numero\", \"type\", \"number\"], [\"matInput\", \"\", \"placeholder\", \"Complemento\", \"formControlName\", \"complemento\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"action-button\"], [\"mat-raised-button\", \"\", \"type\", \"button\", 1, \"cancel-button\", 3, \"click\"], [3, \"value\"]],\n      template: function AlunoCreateComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-title\", 2);\n          i0.ɵɵtext(2, \"Novo Aluno\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 3);\n          i0.ɵɵlistener(\"ngSubmit\", function AlunoCreateComponent_Template_form_ngSubmit_3_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.createAluno());\n          });\n          i0.ɵɵelementStart(4, \"div\", 4)(5, \"mat-form-field\");\n          i0.ɵɵelement(6, \"input\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"mat-form-field\")(8, \"mat-select\", 6);\n          i0.ɵɵtemplate(9, AlunoCreateComponent_mat_option_9_Template, 2, 2, \"mat-option\", 7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"mat-form-field\");\n          i0.ɵɵelement(11, \"input\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"mat-form-field\");\n          i0.ɵɵelement(13, \"input\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"mat-form-field\");\n          i0.ɵɵelement(15, \"input\", 10)(16, \"mat-datepicker-toggle\", 11)(17, \"mat-datepicker\", null, 0);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"mat-form-field\");\n          i0.ɵɵelement(20, \"input\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"mat-form-field\");\n          i0.ɵɵelement(22, \"input\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"mat-form-field\");\n          i0.ɵɵelement(24, \"input\", 14);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"mat-form-field\");\n          i0.ɵɵelement(26, \"input\", 15);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"mat-form-field\");\n          i0.ɵɵelement(28, \"input\", 16)(29, \"mat-datepicker-toggle\", 11)(30, \"mat-datepicker\", null, 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"mat-form-field\");\n          i0.ɵɵelement(33, \"textarea\", 17);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(34, \"div\", 18)(35, \"div\")(36, \"mat-form-field\")(37, \"input\", 19);\n          i0.ɵɵlistener(\"blur\", function AlunoCreateComponent_Template_input_blur_37_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.buscarEndereco());\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(38, \"div\")(39, \"mat-form-field\");\n          i0.ɵɵelement(40, \"input\", 20);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(41, \"div\")(42, \"mat-form-field\");\n          i0.ɵɵelement(43, \"input\", 21);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(44, \"div\")(45, \"mat-form-field\");\n          i0.ɵɵelement(46, \"input\", 22);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(47, \"div\")(48, \"mat-form-field\");\n          i0.ɵɵelement(49, \"input\", 23);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(50, \"div\")(51, \"mat-form-field\");\n          i0.ɵɵelement(52, \"input\", 24);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(53, \"div\")(54, \"mat-form-field\");\n          i0.ɵɵelement(55, \"input\", 25);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(56, \"button\", 26);\n          i0.ɵɵtext(57, \" Salvar \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(58, \"button\", 27);\n          i0.ɵɵlistener(\"click\", function AlunoCreateComponent_Template_button_click_58_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.cancel());\n          });\n          i0.ɵɵtext(59, \" Cancelar \");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          const picker_r4 = i0.ɵɵreference(18);\n          const picker2_r5 = i0.ɵɵreference(31);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.alunoForm);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngForOf\", ctx.series);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"matDatepicker\", picker_r4);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"for\", picker_r4);\n          i0.ɵɵadvance(12);\n          i0.ɵɵproperty(\"matDatepicker\", picker2_r5);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"for\", picker2_r5);\n        }\n      },\n      dependencies: [i5.NgForOf, i6.MatCard, i6.MatCardTitle, i7.MatButton, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i8.MatFormField, i8.MatSuffix, i9.MatInput, i10.MatDatepickerInput, i10.MatDatepicker, i10.MatDatepickerToggle, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i11.NgxMaskDirective, i12.MatSelect, i13.MatOption],\n      styles: [\"form[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin-top:20px}button[_ngcontent-%COMP%]{margin:20px 15px 0 0}.form-container[_ngcontent-%COMP%], .endereco-container[_ngcontent-%COMP%]{display:flex;flex-direction:column}.endereco-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{width:100%}.form-column[_ngcontent-%COMP%]{flex:1;min-width:300px;padding:10px}.mat-form-field[_ngcontent-%COMP%]{width:100%}.action-button[_ngcontent-%COMP%]{margin-top:10px;background-color:#ffbe00!important}.cancel-button[_ngcontent-%COMP%]{margin-bottom:40px}.center-title[_ngcontent-%COMP%]{text-align:center}\"]\n    });\n  }\n  return AlunoCreateComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}